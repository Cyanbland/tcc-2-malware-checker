// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  USER
  ADMIN
}

enum AnalysisType {
  YARA
  FUZZYHASH
}

model User {
  id String @id @default(uuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  email String @unique
  hash String
  role Role @default(USER)

  firstName String?
  lastName String?

  config Configuration?

  files File[]
  subscribedYaraSources YaraRuleSourcesOnUsers[]

  // just to rename
  @@map("users")
}

model Configuration {
  id Int @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  userId String @unique
  user User @relation(fields: [userId], references: [id])

  enableYaraAnalysis Boolean @default(false)
  enableFuzzyHashingAnalysis Boolean @default(false)
  enableImportHashingAnalysis Boolean @default(false)

}

model File {
  id String @id @default(uuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  lastAnalyzedAt DateTime?

  storedName String
  originalName String
  type String
  length Int?
  isAnalyzed Boolean @default(false)
  isMalware Boolean?
  malwareScore Float?
  location String

  triggeredAnalysis String[] @default([])

  userId String
  user User @relation(fields: [userId], references: [id])

  analysys Analysis[]

  @@map("files")
}

model Analysis {
  id String @id @default(uuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  type AnalysisType
  info String[] @default([])

  fileId String 
  file File @relation(fields: [fileId], references: [id], onDelete: Cascade)
}

model YaraRuleSource {
  id Int @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  name String @unique
  referenceUrl String

  rules YaraRule[]
  subscribedUsers YaraRuleSourcesOnUsers[]

  @@map("yara_rule_sources")
}

model YaraRule {
  id Int @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  fileName String
  path String
  sourceId Int 
  source YaraRuleSource @relation(fields: [sourceId], references: [id])

  @@map("yara_rules")
}

model YaraRuleSourcesOnUsers {
  user User @relation(fields: [userId], references: [id])
  userId String 
  source YaraRuleSource @relation(fields: [sourceId], references: [id])
  sourceId Int 
  assignedAt DateTime @default(now())

  @@id([userId, sourceId])
}