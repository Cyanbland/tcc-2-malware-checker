import os
import requests
import streamlit as st
from streamlit_jwt_authenticator import Authenticator

def authenticate_user(email, password):
    api_endpoint = os.getenv("API_ENDPOINT") + '/auth/login'


    # Simulated API request payload
    payload = {
        "email": email,
        "password": password
    }

    try:
        response = requests.post(api_endpoint, json=payload)
        resp = response.json()

        if response.status_code == 200:
            st.success("Login Successful!")
            st.set_cookie("jwt_token", resp["access_token"])
        else:
            errors = resp["message"]
            print(errors)

            if type(errors) == list:
                for er in errors:
                    st.error(er)
            else:
                st.error(errors)
            st.error("Login failed. Please try again.")

    except Exception as e:
        print("Error occurred during API call:", e)
        st.error("Login failed. Please try again.")

# Login Page
def login():
    st.title("Login")
    email = st.text_input("Email")
    password = st.text_input("Password", type="password")

    if st.button("Login"):
        if not email:
            st.error("Email can't be empty")
            return
        
        if not password:
            st.error("Password can't be empty")
            return

        jwt_token = authenticate_user(email, password)
        if jwt_token:
            st.success(f"Welcome back, {email}!")
            # Set JWT token as a cookie
            st.set_cookie("jwt_token", jwt_token)
            # Add the functionality you want after successful login here
