import time
import streamlit as st
import requests
import os
import cookies
from sidebar import sidebar

def register_user(first_name, last_name, email, password):
    jwt = ""
    api_endpoint = os.getenv("API_ENDPOINT") + '/auth/signup'

    payload = {
        "email": email,
        "password": password
    }
    if first_name:
        payload["firstName"] = first_name
    
    if last_name:
        payload["lastName"] = last_name

    try:
        response = requests.post(api_endpoint, json=payload)
        resp = response.json()

        if response.status_code == 201:
            st.success("Registration Successful!")
            jwt = resp["access_token"]
        
        else:
            errors = resp["message"]

            if type(errors) == list:
                for er in errors:
                    st.error(er)
            else:
                st.error(errors)
            st.error("Registration failed. Please try again.")

        return jwt

    except Exception as e:
        print("Error occurred during API call:", e)
        st.error("Error ocurred. Please try again.")

# Register Page
def register():
    sidebar()

    if st.session_state.auth_status != 'Not Authenticated':
        st.warning("Already authenticated as " + st.session_state.auth_status)
        return
    

    st.title("Register")
    first_name = st.text_input("First Name")
    last_name = st.text_input("Last Name")
    email = st.text_input("Email*")
    password = st.text_input("Password*", type="password")
    confirm_password = st.text_input("Confirm Password*", type="password")

    if st.button("Register"):
        
        if not email:
            st.error("Email can't be empty")
            return
        
        if not password or not confirm_password:
            st.error("Password can't be empty")
            return

        if password != confirm_password:
            st.error("Passwords do not match")
            return

        jwt = register_user(first_name, last_name, email, password)

        if jwt:
            cookies.cookie_manager.updateJWTCookie(jwt)
            st.session_state.auth_status = email.split('@')[0]

            time.sleep(1)
            st.switch_page("Home.py")

register()