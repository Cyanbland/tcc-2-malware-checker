import os
import streamlit as st
import requests
from check_access import check_access_allowed
from sidebar import sidebar
import cookies

def get_file_analysis_history(jwt):
    analysis_info = {}

    api_endpoint = os.getenv("API_ENDPOINT") + '/files/analysis-history'

    try:
        response = requests.get(api_endpoint, headers = {"Authorization": f"Bearer {jwt}"})
        resp = response.json()

        if response.status_code == 200:
            analysis_info = resp
        
        else:
            errors = resp["message"]

            if type(errors) == list:
                for er in errors:
                    st.error(er)
            else:
                st.error(errors)
            st.error("Request failed. Please try again.")

        return analysis_info

    except Exception as e:
        print("Error occurred during API call:", e)
        st.error("Error ocurred. Please try again.")

def analysis_history():
    sidebar()
    # check if current jwt is still valid
    if (check_access_allowed()):
        st.title("File Analyses History")

        jwt = cookies.cookie_manager.getJWTCookieValue()

        analysis_history_info = get_file_analysis_history(jwt)
        
        if (analysis_history_info):
            for analysis in analysis_history_info:
                st.subheader(analysis["file"]["originalName"])
                st.write("Ran at: " + analysis["createdAt"])
                st.write("Type: " + analysis["type"])
                with st.expander("Detection information"):
                    for info in analysis["info"]:
                        st.markdown("- " + info)
                    
                    #st.write("Malware Score: " + file["malwareScore"])
                    if analysis["file"]["isMalware"] == True:
                        st.write("Possible Malware detected :biohazard_sign:")
                    else:
                        st.write("Probably not malware :heavy_check_mark:")
                st.markdown("---")
        else:
            st.write("No File Analyses available!")

    
    return

analysis_history()