import os
import time
import requests
import streamlit as st

from check_access import check_access_allowed
from sidebar import sidebar
import cookies

def get_yara_sources(jwt):
    yara_sources = []

    api_endpoint = os.getenv("API_ENDPOINT") + '/yara-source/list-yara-sources'

    try:
        response = requests.get(api_endpoint, headers={"Authorization": f"Bearer {jwt}"})
        resp = response.json()

        if response.status_code == 200:
            yara_sources = resp
        
        else:
            errors = resp["message"]

            if isinstance(errors, list):
                for er in errors:
                    st.error(er)
            else:
                st.error(errors)
            st.error("Request failed. Please try again.")

        return yara_sources

    except Exception as e:
        print("Error occurred during API call:", e)
        st.error("Error ocurred. Please try again.")

def get_subscribed_yara_sources(jwt):
    yara_sources = []

    api_endpoint = os.getenv("API_ENDPOINT") + '/yara-source/list-subscribed-yara-sources'

    try:
        response = requests.get(api_endpoint, headers={"Authorization": f"Bearer {jwt}"})
        resp = response.json()

        if response.status_code == 200:
            yara_sources = resp
        
        else:
            errors = resp["message"]

            if isinstance(errors, list):
                for er in errors:
                    st.error(er)
            else:
                st.error(errors)
            st.error("Request failed. Please try again.")

        return yara_sources

    except Exception as e:
        print("Error occurred during API call:", e)
        st.error("Error ocurred. Please try again.")

def subscribe_to_source(jwt, source_id):
    api_endpoint = os.getenv("API_ENDPOINT") + '/yara-source/subscribe-to-source'

    json = {
        "sourceId": source_id
    }
    
    try:
        response = requests.post(api_endpoint, json=json ,headers={"Authorization": f"Bearer {jwt}"})
        
        if response.status_code == 201:
            st.success("Subscribed successfully!")
            time.sleep(1)
            st.rerun()
        else:
            resp = response.json()
            errors = resp.get("message", "An error occurred while subscribing.")
            
            if isinstance(errors, list):
                for er in errors:
                    st.error(er)
            else:
                st.error(errors)

    except Exception as e:
        print("Error occurred during API call:", e)
        st.error("Error occurred while subscribing. Please try again.")

def unsubscribe_from_source(jwt, source_id):
    api_endpoint = os.getenv("API_ENDPOINT") + '/yara-source/unsubscribe-to-source'

    json = {
        "sourceId": source_id
    }
    
    try:
        response = requests.post(api_endpoint, json=json ,headers={"Authorization": f"Bearer {jwt}"})
        
        if response.status_code == 201:
            st.success("Subscribed successfully!")
            time.sleep(1)
            st.rerun()
        else:
            resp = response.json()
            errors = resp.get("message", "An error occurred while subscribing.")
            
            if isinstance(errors, list):
                for er in errors:
                    st.error(er)
            else:
                st.error(errors)

    except Exception as e:
        print("Error occurred during API call:", e)
        st.error("Error occurred while subscribing. Please try again.")


def yara_sources():
    # Sidebar
    sidebar()

    # Check if current JWT is still valid
    if check_access_allowed():
        st.title("YARA Sources")

        jwt = cookies.cookie_manager.getJWTCookieValue()
        yara_sources_list = get_yara_sources(jwt)
        subscribed_yara_sources = get_subscribed_yara_sources(jwt)

        st.header("Subscribed YARA Sources")
        if subscribed_yara_sources:
            for source in subscribed_yara_sources:
                current_source = next((x for x in yara_sources_list if x["id"] == source["sourceId"]), None)
                st.subheader(current_source['name'])
                st.write("Reference URL: " + current_source["referenceUrl"])
                if st.button("Unsubscribe from Source :x:", key= '0' + str(current_source['id'])):
                    unsubscribe_from_source(jwt, current_source['id'])
                st.markdown("---")
        else:
            st.write("Not subscribed to any YARA Sources")

        st.header("Available YARA Sources")
        if yara_sources_list:
            for source in yara_sources_list:
                st.subheader(source['name'])
                st.write("Created At: " + source["createdAt"])
                st.write("Updated At: " + source["updatedAt"])
                st.write("Reference URL: " + source["referenceUrl"])
                if st.button("Subscribe to Source :inbox_tray:", key=source['id']):
                    subscribe_to_source(jwt, source['id'])
                st.markdown("---")
        else:
            st.write("No YARA sources available.")

    return

yara_sources()
